plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('buildJar', Jar) {
    manifest {
        attributes(
                'Main-Class': 'com.example.foodfindsbackend.FoodFindsBackendApplication'
        )
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks.register('runCodeAnalysis', JavaExec) {
    main = 'com.example.foodfindsbackend.FoodFindsBackendApplication'
    classpath = sourceSets.main.runtimeClasspath

    // Read file content and pass as a single string argument
    def codeSnippet = file('src/main/java/com/example/foodfindsbackend/controller/ReviewController.java').text
    args = ["${codeSnippet}"]
}
